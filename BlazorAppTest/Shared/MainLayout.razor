@inherits LayoutComponentBase

<div class="sidebar">
    <NavMenu />
</div>
<div class="fixed-bottom d-flex align-items-center justify-content-between install-prompt">
    <span>Install this app?</span>
    <span>
        <button class="btn btn-light btn-sm mx-2" @onclick="@InstallClicked">Install</button>
        <button class="btn btn-outline-light btn-sm" @onclick="@(()=>Installable=false)">Cancel </button>
    </span>
</div>
<div class="main">
    <div class="top-row px-4">
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
    </div>

    @if (Installable)
    {
    <div class="fixed-bottom d-flex align-items-center justify-content-between install-prompt">
        <span>Install this app?</span>
        <span>
            <button class="btn btn-light btn-sm mx-2" @onclick="@InstallClicked">Install</button>
            <button class="btn btn-outline-light btn-sm" @onclick="@(()=>Installable=false)">Cancel </button>
        </span>
    </div>
    }

    <div class="content px-4">
        @Body
    </div>
</div>


@code{

    protected override void OnInitialized()
    {
        ml = () => InvokeAsync(StateHasChanged);// PWA infrastructure
    }

    protected override async Task OnInitializedAsync()
    {
        ml = async () => await InvokeAsync(StateHasChanged);// PWA infrastructure
    }

    // PWA infrastructure
    [Inject] IJSRuntime JSRuntime { get; set; } // needs to be here not as a @inject directive
    static bool Installable = false;
    static Action ml;

    [JSInvokable("InstallPwaPrompt")]
    //a named method so that it is easy to call from JS Interop
    public static Task InstallPwaPrompt()
    {
        Installable = true;
        ml.Invoke();
        return Task.CompletedTask;
    }

    async void InstallClicked(MouseEventArgs args)
    {
        Installable = false;
        await JSRuntime.InvokeAsync<object>("OnPwaInstallClick");
    }
}